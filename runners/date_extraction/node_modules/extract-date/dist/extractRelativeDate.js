"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _momentTimezone = _interopRequireDefault(require("moment-timezone"));

var _relativeDateNames = _interopRequireDefault(require("relative-date-names"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (subject, locale, timezone) => {
  const translation = _relativeDateNames.default[locale];

  if (!translation) {
    throw new Error('No translation available for the target locale.');
  }

  if (!_momentTimezone.default.tz.zone(timezone)) {
    throw new Error('Unrecognized timezone.');
  }

  const normalizedSubject = subject.toLowerCase();
  const now = (0, _momentTimezone.default)();

  if (normalizedSubject === translation.day.relative.yesterday) {
    return now.subtract(1, 'day').format('YYYY-MM-DD');
  }

  if (normalizedSubject === translation.day.relative.today) {
    return now.format('YYYY-MM-DD');
  }

  if (normalizedSubject === translation.day.relative.tomorrow) {
    return now.add(1, 'day').format('YYYY-MM-DD');
  }

  return null;
};

exports.default = _default;
//# sourceMappingURL=extractRelativeDate.js.map